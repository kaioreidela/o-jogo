#inicializando o pygame
import pygame
import self as self
from pygame.locals import *
from sys import exit
import os
from random import randrange, choice

pygame.init()

diretorio_principal=os.path.dirname(__file__)
diretorio_imagens=os.path.join(diretorio_principal,'imagens')


Largura=640
Altura=480

Branco=(255,255,255)

tela=pygame.display.set_mode((Largura,Altura))

pygame.display.set_caption("jogo")

sprite_sheet=pygame.image.load(os.path.join(diretorio_imagens,'spritesjogo111.png')).convert_alpha()

escolha_obstaculo = choice([0,1])

pontos = 0

def exibe_mensagem(msg, tamanho, cor):
    fonte = pygame.font.SysFont('comincsansms', tamanho, True, False)
    mensagem = f'{msg}'
    texto_formatado = fonte.render(mensagem, True, cor)
    return texto_formatado

class Vaqueiro(pygame.sprite.Sprite):
  def __init__(self):
    pygame.sprite.Sprite.__init__(self)
    self.imagens_player=[]
    for i in range(4):
      img = sprite_sheet.subsurface((i*32,0),(32,32))
      img=pygame.transform.scale(img,(32*4,32*4))
      self.imagens_player.append(img)

    self.index_lista=0
    self.image=self.imagens_player[0]
    self.rect=self.image.get_rect()
    self.mask=pygame.mask.from_surface(self.image)
    self.pos_y_inicial = Altura - 96 - 96//2
    self.rect.center=(100,Altura-96)
  self.pulo = False
  def pular(self):
    self.pulo = True


  def update(self):
    if self.pulo == True:
        if self.rect.y <= 150:
          self.pulo = False
        self.rect.y -= 18
    else:
     if self.rect.y < self.pos_y_inicial:
       self.rect.y += 18
     else:
       self.rect.y = self.pos_y_inicial

     if self.index_lista > 3 :
      self.index_lista=0
      self.index_lista +=0.25
      self.image=self.imagens_player[int(self.index_lista)]

 class Chao(pygame.sprite.Sprite):
    def __init__(self,pos_x):
      pygame.sprite.Sprite.__init__(self)
      self.image=sprite_sheet.subsurface((9*32,0),(32,32))
      self.image=pygame.transform.scale(self.image,(32*4,32*4))
      self.rect=self.image.get_rect()
      self.rect.y=Altura-128
      self.rect.x=pos_x *128
    def update(self):
     if self.rect.topright[0] < 0:
        self.rect.x=Largura
        self.rect.x -=10

 class Cacto(pygame.sprite.Sprite):
   def __init__(self):
     pygame.sprite.Sprite.__init__(self)
     self.image = sprite_sheet.subsurface((8* 32, 0), (32, 32))
     self.image = pygame.transform.scale(self.image, (32 * 4, 32 * 4))
     self.rect=self.image.get_rect()
     self.mask = pygame.mask.from_surface(self.image)
     self.escolha = escolha_obstaculo
     self.rect.center=(Largura,Altura -45)

   def update(self):
    if self.escolha == 0:
      if self.rect.topright[0] < 0:
         self.rect.x = Largura
         self.rect.x -= 10



 class Urubu(pygame.sprite.Sprite):
   def __int__(self):
     pygame.sprite.Sprite.__init__(self)
     self.imagens_player = []
     for i in range(4,8):
        img = sprite_sheet.subsurface((i * 32) (32, 32))
        img = pygame.transform.scale(img, (32 * 3, 32 * 3))
       self.imagens_player.append(img)

     self.index_lista = 0
     self.image = self.imagens_player[self.index_lista]
     self.mask = pygame.mask.from_surface(self.image)
     self.escolha = escolha_obstaculo
     self.rect = self.image.get_rect()
     self.rect.center = (Largura, 300)
     self.rect.x = Largura

    def update(self):
    if self.escolha == 1:
     if self.rect.topright[0] < 0:
      self.rect.x = Largura
     self.rect.x -= 10

    if self.index_lista > 3:
       self.index_lista = 0
       self.index_lista += 0.25
       self.image = self.imagens_player[int(self.index_lista)]


todas_as_sprites=pygame.sprite.Group()
vaqueiro=Vaqueiro()
todas_as_sprites.add(vaqueiro)

for i in range(Largura*2//64):
 chao=Chao(i)
 todas_as_sprites.add(chao)

 cacto = Cacto()
 todas_as_sprites.add(cacto)

 urubu = Urubu()
 todas_as_sprites.add(urubu)

 grupo_obstaculos = pygame.sprite.Group()
 grupo_obstaculos.add(cacto)
 grupo_obstaculos.add(urubu)

relogio=pygame.time.Clock()
while True:
  relogio.tick(30)
  tela.fill(Branco)
  for event in pygame.event.get():
    if event.type == QUIT:
      pygame.quit()
      exit()
    if event.type == KEYDOWN:
      if event.key == K_SPACE:
        if vaqueiro.rect.y != vaqueiro.pos_y_inicial:
          pass
        else:
          vaqueiro.pular()

colisoes=pygame.sprite.spritecollide(vaqueiro,grupo_obstaculos,False,pygame.sprite.collide_mask)

todas_as_sprites.draw(tela)

if cacto.rect.topright[0] <= 0 or urubu.rect.topright[0] <= 0:
   escolha_osbtaculo = choice([0,1])
cacto.rect.x = Largura
urubu.rect.x = Largura
cacto.escolha = escolha_osbtaculo
urubu.escolha = escolha_osbtaculo

if colisoes:
 pass
else:
 pontos += 1
 todas_as_sprites.update()
 textos_pontos = exibe_mensagens(pontos, 40, (0,0,0))

tela.blit(textos_pontos, (520, 30))










 pygame.display.flip()
